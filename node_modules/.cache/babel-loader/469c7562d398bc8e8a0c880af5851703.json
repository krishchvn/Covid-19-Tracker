{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chavan\\\\covid-tracker\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.45673\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState({});\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all').then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries').then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso3\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n        setMapCountries(data);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = event => {\n    const countryCode = event.target.value;\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  console.log('uwe', countryInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Covid-19 Tracker\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: country,\n    onChange: onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    isRed: true,\n    active: casesType === \"cases\",\n    onClick: e => setCasesType('cases'),\n    title: \"Coronavirus cases\",\n    cases: prettyPrintStat(countryInfo.todayCases),\n    total: prettyPrintStat(countryInfo.cases),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    active: casesType === \"recovered\",\n    onClick: e => setCasesType('recovered'),\n    title: \"Recovered\",\n    cases: prettyPrintStat(countryInfo.todayRecovered),\n    total: prettyPrintStat(countryInfo.recovered),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    active: casesType === \"deaths\",\n    onClick: e => setCasesType('deaths'),\n    title: \"Deaths \",\n    cases: prettyPrintStat(countryInfo.todayDeaths),\n    total: prettyPrintStat(countryInfo.deaths),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    casesType: casesType,\n    center: mapCenter,\n    zoom: mapZoom,\n    countries: mapCountries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \" Worldwide New \", casesType), /*#__PURE__*/React.createElement(LineGraph, {\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Chavan/covid-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso3","sortedData","onCountryChange","event","countryCode","target","url","long","console","log","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat:34.80746, lng: -40.45673\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState({});\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso3,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n          setMapCountries(data);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n\n    const url =\n      countryCode === 'worldwide'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n\n        setMapCenter([data.countryInfo.lat,data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  console.log('uwe', countryInfo);\n\n  return (\n    <div className=\"App\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n\n              {/*\n                <MenuItem value = \"worldwide\">Worldwide</MenuItem>\n                <MenuItem value = \"worldwide\">opt 1</MenuItem>\n                <MenuItem value = \"worldwide\">opt2</MenuItem>\n                <MenuItem value = \"worldwide\">opt3</MenuItem>\n              */}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox \n          isRed\n          active= {casesType===\"cases\"}\n          onClick = {e => setCasesType('cases')}\n            title=\"Coronavirus cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)}\n          />\n\n          <InfoBox\n          active= {casesType===\"recovered\"}\n          onClick = {e => setCasesType('recovered')}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)}\n          />\n\n          <InfoBox\n          active= {casesType===\"deaths\"}\n          onClick = {e => setCasesType('deaths')}\n            title=\"Deaths \"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)}\n          />\n        </div>\n\n        <Map casesType = {casesType}\n        center= {mapCenter}\n          zoom = {mapZoom} \n          countries = {mapCountries}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <Table countries={tableData} />\n            <h3> Worldwide New {casesType}</h3>\n          <LineGraph casesType= {casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}