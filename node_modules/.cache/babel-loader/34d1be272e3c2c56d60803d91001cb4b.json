{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chavan\\\\covid-tracker\\\\src\\\\util.js\";\nimport React from 'react';\nimport { Circle, Popup } from 'react-leaflet';\nimport numeral from 'numeral'; //import { CircleMarker } from 'leaflet';\n\nimport './Map.css';\nconst casesTypeColors = {\n  cases: {\n    hex: '#CC1034',\n    multiplier: 800\n  },\n  recovered: {\n    hex: '#7dd71d',\n    multiplier: 1200\n  },\n  deaths: {\n    hex: '#fb4443',\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\n/*  sortedData.sort((a,b) => {\r\n        if (a.cases > b.cases) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    })\r\n    return sortedData;\r\n*/\n\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  fillOpacity: 0.4,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-flag\",\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }\n}, country.country), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-confirmed\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }\n}, \"Cases: \", numeral(country.cases).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-recovered\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }\n}, \"Recovered: \", numeral(country.recovered).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-deaths\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }\n}, \"Deaths: \", numeral(country.deaths).format(\"0,0\"))))));","map":{"version":3,"sources":["C:/Users/Chavan/covid-tracker/src/util.js"],"names":["React","Circle","Popup","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Circle, Popup } from 'react-leaflet';\r\nimport numeral from 'numeral';\r\n//import { CircleMarker } from 'leaflet';\r\nimport './Map.css'\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: '#CC1034',\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: '#7dd71d',\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: '#fb4443',\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\n/*  sortedData.sort((a,b) => {\r\n        if (a.cases > b.cases) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    })\r\n    return sortedData;\r\n*/\r\n\r\nexport const prettyPrintStat = (stat) => \r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n    export const showDataOnMap = (data, casesType = \"cases\") =>\r\n    data.map((country) => (\r\n      <Circle\r\n        center={[country.countryInfo.lat, country.countryInfo.long]}\r\n        color={casesTypeColors[casesType].hex}\r\n        fillColor={casesTypeColors[casesType].hex}\r\n        fillOpacity={0.4}\r\n        radius={\r\n          Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n        }\r\n      >\r\n        <Popup>\r\n          <div className=\"info-container\">\r\n            <div\r\n              className=\"info-flag\"\r\n              style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n            ></div>\r\n            <div className=\"info-name\">{country.country}</div>\r\n            <div className=\"info-confirmed\">\r\n              Cases: {numeral(country.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-recovered\">\r\n              Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-deaths\">\r\n              Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n            </div>\r\n          </div>\r\n        </Popup>\r\n      </Circle>\r\n    ));"]},"metadata":{},"sourceType":"module"}