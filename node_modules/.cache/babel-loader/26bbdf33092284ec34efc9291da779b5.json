{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chavan\\\\covid-tracker\\\\src\\\\LineGraph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: 'time'\n    }]\n  }\n};\n\nfunction LineGraph() {\n  const [data, setData] = useState({}); // \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    ;\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      // console.log(data);\n      let chartData = buildChartData(data, 'cases');\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Graph here\"), /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204,16,52,0.3)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["C:/Users/Chavan/covid-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","LineGraph","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GADM;AAIdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AADC,GAJI;AASdC,EAAAA,mBAAmB,EAAE,KATP;AAUdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,OADE;AAERC,IAAAA,SAAS,EAAE,KAFH;AAGRC,IAAAA,SAAS,EAAG;AACVC,MAAAA,KAAK,EAAE,UAASC,WAAT,EAAsBC,IAAtB,EAA4B;AACjC,eAAOd,OAAO,CAAEa,WAAW,CAACE,KAAd,CAAP,CAA4BC,MAA5B,CAAmC,MAAnC,CAAP;AACD;AAHS;AAHJ,GAVI;AAmBdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE;AADR,KADK;AADD;AAnBM,CAAhB;;AA8BA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC,CADmB,CAGnB;;AAEA,QAAMyB,cAAc,GAAG,CAACR,IAAD,EAAOS,SAAS,GAAG,OAAnB,KAA+B;AACpD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AAEA,SAAK,IAAIC,IAAT,IAAiBZ,IAAI,CAACa,KAAtB,EAA8B;AAC5B,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEH,IADgB;AAEnBI,UAAAA,CAAC,EAAEhB,IAAI,CAACS,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFR,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACD;;AAEDH,MAAAA,aAAa,GAAGX,IAAI,CAACS,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACD;;AAAA;AACD,WAAOF,SAAP;AACD,GAhBD;;AAmBA1B,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESnB,IAAD,IAAU;AACf;AACC,UAAIU,SAAS,GAAGF,cAAc,CAACR,IAAD,EAAO,OAAP,CAA9B;AACAO,MAAAA,OAAO,CAACG,SAAD,CAAP;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAI;AACZY,MAAAA,QAAQ,EAAE,CACR;AACAC,QAAAA,eAAe,EAAE,qBADjB;AAEAC,QAAAA,WAAW,EAAE,SAFb;AAGAxB,QAAAA,IAAI,EAAEA;AAHN,OADQ;AADE,KAAd;AAQG,IAAA,OAAO,EAAIb,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAcD;;AAED,eAAemB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks : {\r\n      label: function(tooltipItem, data) {\r\n        return numeral (tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: 'time',\r\n        \r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n\r\nfunction LineGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  // \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\r\n\r\n  const buildChartData = (data, casesType = 'cases') => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for( let date in data.cases)  {\r\n      if (lastDataPoint) {\r\n        const newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n\r\n      lastDataPoint = data[casesType][date];\r\n    };\r\n    return chartData;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n       // console.log(data);\r\n        let chartData = buildChartData(data, 'cases');\r\n        setData(chartData);\r\n      });\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Graph here</h1>\r\n      <Line data = {{\r\n        datasets: [\r\n          {\r\n          backgroundColor: \"rgba(204,16,52,0.3)\",\r\n          borderColor: \"#CC1034\",\r\n          data: data\r\n        }\r\n      ]\r\n      }} options = {options}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n"]},"metadata":{},"sourceType":"module"}