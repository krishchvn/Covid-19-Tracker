{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chavan\\\\covid-tracker\\\\src\\\\util.js\";\nimport React from 'react';\nimport { Circle, Popup } from 'react-leaflet';\nimport numeral from 'numeral'; //import { CircleMarker } from 'leaflet';\n\nconst casesTypeColors = {\n  cases: {\n    hex: '#CC1034',\n    multiplier: 800\n  },\n  recovered: {\n    hex: '#7dd71d',\n    multiplier: 1200\n  },\n  deaths: {\n    hex: '#fb4443',\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\n/*  sortedData.sort((a,b) => {\r\n        if (a.cases > b.cases) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    })\r\n    return sortedData;\r\n*/\n\nexport const showDataOnMap = (data, casesType = \"cases\") => {\n  //console.log(data);\n  data.map(country => /*#__PURE__*/React.createElement(Circle, {\n    center: [country.countryInfo.lat, country.countryInfo.long],\n    fillOpacity: 0.4,\n    color: casesTypeColors[casesType].hex,\n    fillColor: casesTypeColors[casesType].hex,\n    radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Users/Chavan/covid-tracker/src/util.js"],"names":["React","Circle","Popup","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CACA;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,UAAU,EAAE;AAFP,GADe;AAKtBC,EAAAA,SAAS,EAAE;AACTF,IAAAA,GAAG,EAAE,SADI;AAETC,IAAAA,UAAU,EAAE;AAFH,GALW;AAStBE,EAAAA,MAAM,EAAE;AACNH,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,UAAU,EAAE;AAFN;AATc,CAAxB;AAeA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAChC,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AAEA,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACT,KAAF,GAAUU,CAAC,CAACV,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAApD,CAAP;AACD,CAJM;AAMP;;;;;;;;;;AAUA,OAAO,MAAMW,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAC,OAAjB,KAA6B;AACxD;AACAN,EAAAA,IAAI,CAACO,GAAL,CAAWC,OAAD,iBACR,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV;AAEE,IAAA,WAAW,EAAE,GAFf;AAGE,IAAA,KAAK,EAAElB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHpC;AAIE,IAAA,SAAS,EAAEF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAJxC;AAKE,IAAA,MAAM,EACJiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UAN/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,CARF,CADF;AAsBD,CAxBM","sourcesContent":["import React from 'react';\r\nimport { Circle, Popup } from 'react-leaflet';\r\nimport numeral from 'numeral';\r\n//import { CircleMarker } from 'leaflet';\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: '#CC1034',\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: '#7dd71d',\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: '#fb4443',\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\n/*  sortedData.sort((a,b) => {\r\n        if (a.cases > b.cases) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    })\r\n    return sortedData;\r\n*/\r\n\r\nexport const showDataOnMap = (data, casesType=\"cases\") => {\r\n  //console.log(data);\r\n  data.map( (country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }>\r\n      <Popup>\r\n        <div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n    \r\n    ));\r\n\r\n}"]},"metadata":{},"sourceType":"module"}